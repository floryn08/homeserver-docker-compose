version: "3.9"

networks:
  nginx-network:
    external: true
  db-network:
    external: true
  mqtt-network:
    external: true

services:

  swag:
    image: ghcr.io/linuxserver/swag:2.6.0
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - URL=${DOMAIN}
      - VALIDATION=http
    volumes:
      - ${VOLUMES_PATH}/core-services/swag/config:/config
    ports:
      - 443:443
      - 80:80
    networks:
      - nginx-network
    restart: unless-stopped

  redis:
    image: redis:7.0.11-alpine
    container_name: redis
    environment:
      POSTGRES_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - 6379:6379
    networks:
      - db-network
    restart: unless-stopped

  postgres:
    image: postgres:15.3-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - ${VOLUMES_PATH}/core-services/postgres/data:/var/lib/postgresql/data
    networks:
      - db-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:7.3
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ${VOLUMES_PATH}/core-services/pgadmin/data:/var/lib/pgadmin
    ports:
      - 5050:80
    networks:
      - db-network
    restart: unless-stopped

  mqtt:
    image: eclipse-mosquitto:2.0.15
    container_name: mqtt    
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ${VOLUMES_PATH}/core-services/mqtt/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ${VOLUMES_PATH}/core-services/mqtt/data:/mosquitto/data
      - ${VOLUMES_PATH}/core-services/mqtt/log:/mosquitto/log
    networks:
      - mqtt-network
    restart: unless-stopped

  filebrowser:
    image: filebrowser/filebrowser:v2.23.0
    container_name: filebrowser
    volumes:
      - ${VOLUMES_PATH}/core-services/filebrowser/database.db:/database.db
      - /mnt:/srv
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    ports:
      - 8888:80
    restart: unless-stopped

  ddclient:
    image: ghcr.io/linuxserver/ddclient:3.10.0
    container_name: ddclient
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/core-services/ddclient:/config
    restart: unless-stopped

  duplicacy:
    container_name: duplicacy
    hostname: duplicacy
    image: ghcr.io/hotio/duplicacy:release-1.7.2
    ports:
      - "3875:3875"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/core-services/duplicacy/config:/config
      - ${VOLUMES_PATH}/core-services/duplicacy/cache:/cache
      - ${VOLUMES_PATH}/core-services/duplicacy/logs:/logs
      - ${BACKUP_HDD_PATH}/backups:/backups
      - /home/pi:/source
      - ${STORAGE_HDD_PATH}:/storage
    restart: unless-stopped
