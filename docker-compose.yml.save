version: "3"
services:

#  nginx-proxy-manager:
#    image: 'jc21/nginx-proxy-manager:latest'
#    container_name: nginx-proxy-manager
#    restart: unless-stopped
#    ports:
#      - '80:80'
#      - '81:81'
#      - '443:443'
#    environment:
#      DB_MYSQL_HOST: "mariadb"
#      DB_MYSQL_PORT: 3306
#      DB_MYSQL_USER: "npm"
#      DB_MYSQL_PASSWORD: "npm"
#      DB_MYSQL_NAME: "npm"
#    volumes:
#      - /opt/appdata/nginx-proxy-manager:/data
#      - /etc/letsencrypt:/etc/letsencrypt
#  mariadb:
#    image: 'jc21/mariadb-aria:latest'
#    container_name: mariadb
#    restart: unless-stopped
#    environment:
#      MYSQL_ROOT_PASSWORD: 'npm'
#      MYSQL_DATABASE: 'npm'
#      MYSQL_USER: 'npm'
#      MYSQL_PASSWORD: 'npm'
#    volumes:
#      - /opt/appdata/mysql:/var/lib/mysql

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    user: "1000" 
      - "3000:3000"
    volumes:
      - /opt/appdata/grafana/data:/var/lib/grafana
      - /opt/appdata/grafana/grafana.ini:/etc/grafana/grafana.ini
      - /opt/appdata/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "8081:80/tcp"
    environment:
      TZ: 'Europe/Bucharest'
      WEBPASSWORD: 'parola123'
    # Volumes store your data between container upgrades
    volumes:
      - /opt/appdata/pihole/etc-pihole/:/etc/pihole/
      - /opt/appdata/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    
  wireguard:
    environment:
      # ⚠️ Required:
      # Change this to your host's public address
      - WG_HOST=192.168.0.150

      # Optional:
      # - PASSWORD=foobar123
      # - WG_PORT=51820
      # - WG_DEFAULT_ADDRESS=10.8.0.x
      - WG_DEFAULT_DNS=192.168.0.150
      # - WG_ALLOWED_IPS=192.168.15.0/24, 10.0.1.0/24
      
    image: weejewel/wg-easy
    container_name: wireguard
    volumes:
      - /opt/appdata/wireguard:/etc/wireguard
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1

  jackett:
    image: ghcr.io/linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Bucharest
      - AUTO_UPDATE=true #optional
#      - RUN_OPTS=<run options here> #optional
    volumes:
      - /opt/appdata/jackett:/config
      - /mnt/hdd/downloads:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped

  nextcloud:
    image: ghcr.io/linuxserver/nextcloud
    container_name: nextcloud
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Bucharest
    volumes:
      - /home:/config/keys
      - /opt/appdata/nextcloud:/config
      - /mnt/hdd2:/data
    ports:
      - 1101:80
    restart: unless-stopped

  jellyfin:
    image: ghcr.io/linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Bucharest
      - JELLYFIN_PublishedServerUrl=192.168.0.150 #optional
    volumes:
      - /opt/appdata/jellyfin:/config
      - /mnt/hdd/tv:/data/tvshows
      - /mnt/hdd/movies:/data/movies
      - /mnt/hdd/anime:/data/anime
      - /home:/ssl
#     - /opt/vc/lib:/opt/vc/lib #optional
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
#      - 1900:1900/udp #optional
    devices:
      - /dev/dri:/dev/dri #optional
      - /dev/vcsm-cma:/dev/vcsm-cma #optional
      - /dev/vchiq:/dev/vchiq #optional
      - /dev/video10:/dev/video10 #optional
      - /dev/video11:/dev/video11 #optional
      - /dev/video12:/dev/video12 #optional
    restart: unless-stopped

  bazarr:
    image: ghcr.io/linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Bucharest
    volumes:
      - /opt/appdata/bazarr:/config
      - /mnt/hdd/movies:/movies
      - /mnt/hdd/tv:/tv
    ports:
      - 6767:6767
    restart: unless-stopped

  sonarr:
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Bucharest
    volumes:
      - /opt/appdata/sonarr:/config
#      - /mnt/hdd/tv:/tv
#      - /mnt/hdd/downloads:/mnt/hdd/downloads
#      - /mnt/hdd/anime:/anime
      - /mnt/hdd:/media
    ports:
      - 8989:8989
    restart: unless-stopped

  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Bucharest
    volumes:
      - /opt/appdata/radarr:/config
#      - /mnt/hdd/movies:/movies
#      - /mnt/hdd/downloads:/mnt/hdd/downloads
      - /mnt/hdd:/media
    ports:
      - 7878:7878
    restart: unless-stopped

  homeassistant:
    image: ghcr.io/linuxserver/homeassistant
    container_name: homeassistant
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Bucharest
    volumes:
      - /opt/appdata/homeassistant:/config
    restart: unless-stopped

  deluge:
    image: ghcr.io/linuxserver/deluge
    container_name: deluge
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Bucharest
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - /opt/appdata/deluge:/config
      - /mnt/hdd/downloads:/downloads
    restart: unless-stopped

#  nzbget:
#    image: ghcr.io/linuxserver/nzbget
#    container_name: nzbget
#    environment:
#      - PUID=1000
#      - PGID=1000
#      - TZ=Europe/Bucharest
#    volumes:
#      - /opt/appdata/nzbget:/config
#      - /mnt/hdd/downloads:/downloads
#    ports:
#      - 6789:6789
#    restart: unless-stopped
  
  grocy:
    image: ghcr.io/linuxserver/grocy
    container_name: grocy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Bucharest
    volumes:
      - /opt/appdata/grocy:/config
    ports:
      - 9283:80
    restart: unless-stopped
