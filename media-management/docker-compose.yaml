version: "3.9"

networks:
  cloudflare-network:
    external: true
  proxy-network:
    external: true
  media-management-network:
    external: true

services:

  sonarr:
    image: linuxserver/sonarr:3.0.10
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/media-management/sonarr:/config
      - ${MEDIA_HDD_PATH}:/media
    ports:
      - 8989:8989
    restart: unless-stopped
    networks:
      - media-management-network

  radarr:
    image: linuxserver/radarr:5.0.3
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/media-management/radarr:/config
      - ${MEDIA_HDD_PATH}:/media
    ports:
      - 7878:7878
    restart: unless-stopped
    networks:
      - media-management-network

  bazarr:
    image: linuxserver/bazarr:1.3.1
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/media-management/bazarr:/config
      - ${MEDIA_HDD_PATH}/movies:/movies
      - ${MEDIA_HDD_PATH}/tv:/tv
      - ${MEDIA_HDD_PATH}/anime:/anime
    ports:
      - 6767:6767
    restart: unless-stopped
    networks:
      - media-management-network

  deluge:
    image: linuxserver/deluge:2.1.1
    container_name: deluge
    # network_mode: host
    ports:
      - 8112:8112
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - ${VOLUMES_PATH}/media-management/deluge:/config
      - ${MEDIA_HDD_PATH}:/media
    restart: unless-stopped

  jellyfin:
    image: linuxserver/jellyfin:10.8.11
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - JELLYFIN_PublishedServerUrl=${LOCAL_IP} #optional
    group_add: 
      - "44"
    volumes:
      - ${VOLUMES_PATH}/media-management/jellyfin:/config
      - ${MEDIA_HDD_PATH}/tv:/data/tvshows
      - ${MEDIA_HDD_PATH}/movies:/data/movies
      - ${MEDIA_HDD_PATH}/anime:/data/anime
      - ${MEDIA_HDD_PATH}/music:/data/music
    # - /opt/vc/lib:/opt/vc/lib #optional
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
    # - 1900:1900/udp #optional
    devices:
      - /dev/dri:/dev/dri #optional
      - /dev/vcsm-cma:/dev/vcsm-cma #optional
      - /dev/vchiq:/dev/vchiq #optional
      - /dev/video10:/dev/video10 #optional
      - /dev/video11:/dev/video11 #optional
      - /dev/video12:/dev/video12 #optional
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.rule=Host(`${DOMAIN}`) && PathPrefix(`/jellyfin`)
      - traefik.http.routers.jellyfin.entrypoints=websecure
      - traefik.http.routers.jellyfin.tls.certresolver=letsencrypt
      - traefik.http.routers.jellyfin-alt.rule=Host(`${DOMAIN2}`) && PathPrefix(`/jellyfin`)
      - traefik.http.routers.jellyfin-alt.entrypoints=web
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
    networks:
      - media-management-network
      - proxy-network

  nextcloud:
    image: linuxserver/nextcloud:27.1.2
    container_name: nextcloud
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      # - /home/pi/ssl:/config/keys
      - ${VOLUMES_PATH}/media-management/nextcloud:/config
      - ${BACKUP_HDD_PATH}/nextcloud:/data
    ports:
      - 1102:80
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.nextcloud.rule=Host(`nextcloud.${DOMAIN2}`)
      - traefik.http.routers.nextcloud.entrypoints=web
      - traefik.http.services.nextcloud.loadbalancer.server.port=80
    networks:
      - media-management-network
      - proxy-network
     
  prowlarr:
    image: linuxserver/prowlarr:1.8.6
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/media-management/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    networks:
      - media-management-network
      
  tvheadend:
    image: linuxserver/tvheadend:arm64v8-51adc040-ls188
    container_name: tvheadend
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - RUN_OPTS= #optional
    volumes:
      - ${VOLUMES_PATH}/media-management/tvheadend/data:/config
      - ${VOLUMES_PATH}/media-management/tvheadend/recordings:/recordings
    ports:
      - 9981:9981
      - 9982:9982
    devices:
      - /dev/dri:/dev/dri #optional
      - /dev/dvb:/dev/dvb #optional
    restart: unless-stopped
    networks:
      - media-management-network
     
  jellyseerr:
    image: fallenbagel/jellyseerr:1.7.0
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=${TIMEZONE}
    ports:
      - 5055:5055
    volumes:
      - ${VOLUMES_PATH}/media-management/jellyseerr/config:/app/config
    restart: unless-stopped
    networks:
      - media-management-network
      - cloudflare-network
     
  wizarr:
    container_name: wizarr
    image: ghcr.io/wizarrrr/wizarr:3.4.1
    ports:
      - 5690:5690
    environment:
      PUID: 1000
      PGID: 1000
      TZ: ${TIMEZONE}
    volumes:
      - ${VOLUMES_PATH}/media-management/wizarr/database:/data/database
    restart: unless-stopped
    networks:
      - media-management-network
      - cloudflare-network

